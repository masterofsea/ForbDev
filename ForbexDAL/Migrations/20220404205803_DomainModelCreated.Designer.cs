// <auto-generated />
using System;
using ForbexDAL.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Forbex.Migrations
{
    [DbContext(typeof(ForbexDbContext))]
    [Migration("20220404205803_DomainModelCreated")]
    partial class DomainModelCreated
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Forbex.DAL.Data.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ConclusionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ContractState")
                        .HasColumnType("integer");

                    b.Property<bool>("DocumentsStorage")
                        .HasColumnType("boolean");

                    b.Property<string>("Ifts")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsReturnableCopy")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LeaseEndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LeaseStartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LeaseTerm")
                        .HasColumnType("integer");

                    b.Property<int>("LesseeId")
                        .HasColumnType("integer");

                    b.Property<int?>("MailContractId")
                        .HasColumnType("integer");

                    b.Property<bool>("MonthlyActs")
                        .HasColumnType("boolean");

                    b.Property<bool>("Paid")
                        .HasColumnType("boolean");

                    b.Property<int?>("PartnerId")
                        .HasColumnType("integer");

                    b.Property<int>("PaymentForm")
                        .HasColumnType("integer");

                    b.Property<decimal>("Penalty")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Price1")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Price2")
                        .HasColumnType("numeric");

                    b.Property<bool>("Receipt")
                        .HasColumnType("boolean");

                    b.Property<int>("RegistrationType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LesseeId");

                    b.HasIndex("MailContractId");

                    b.HasIndex("PartnerId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("Forbex.DAL.Data.Correspondence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ReceiverName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReceivingAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Correspondences");
                });

            modelBuilder.Entity("Forbex.DAL.Data.Lessee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalContacts")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Bank")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Bic")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CheckingAccount")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactNamePosition")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Inn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Kpp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("Ogrn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.HasKey("Id");

                    b.ToTable("Lessees");
                });

            modelBuilder.Entity("Forbex.DAL.Data.MailContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ConclusionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ControlDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("HasProxy")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LeaseBeginDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LeaseEndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LeaseTerm")
                        .HasColumnType("integer");

                    b.Property<string>("MailContractNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price1")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Price2")
                        .HasColumnType("numeric");

                    b.Property<string>("Responsible")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MailContracts");
                });

            modelBuilder.Entity("Forbex.DAL.Data.Partner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Partners");
                });

            modelBuilder.Entity("Forbex.DAL.Data.Contract", b =>
                {
                    b.HasOne("Forbex.DAL.Data.Lessee", "Lessee")
                        .WithMany()
                        .HasForeignKey("LesseeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Forbex.DAL.Data.MailContract", "MailContract")
                        .WithMany()
                        .HasForeignKey("MailContractId");

                    b.HasOne("Forbex.DAL.Data.Partner", "Partner")
                        .WithMany()
                        .HasForeignKey("PartnerId");

                    b.Navigation("Lessee");

                    b.Navigation("MailContract");

                    b.Navigation("Partner");
                });
#pragma warning restore 612, 618
        }
    }
}
